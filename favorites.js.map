{"version":3,"file":"favorites.js","sources":["../src/js/favorite.js"],"sourcesContent":["import icons from '../img/icons/sprites.svg';\nimport axios from \"axios\";\nimport { getFavorites, removeFromFavorites } from \"./storage\";\nimport { api } from './api';\nimport { initModalListeners } from './modal';\n\n\n\n\nasync function renderQuote() {\n    const currentDate = new Date();\n    const currentDay = currentDate.getDate();\n\n    let storedQuoteState = JSON.parse(localStorage.getItem(\"quoteData\")) ?? {};\n\n    const storedQuoteDay = storedQuoteState.day ?? 0;\n\n    if (currentDay !== storedQuoteDay) {\n        const quoteData = await serviceQuote();\n\n        quoteData.day = currentDay;\n        localStorage.setItem(\"quoteData\", JSON.stringify(quoteData));\n        storedQuoteState = quoteData;\n    }\n\n    const quoteText = document.querySelector(\".quote-text\"); \n    const quoteAuthor = document.querySelector(\".quote-author\");\n    quoteText.textContent = storedQuoteState.quote; \n    quoteAuthor.textContent = storedQuoteState.author;\n\n}\n\n\n\nrenderQuote();\n\n\nconst Refs = {\n  galleryList: document.querySelector(\".gallery-list\"),\n  defaultText: document.querySelector(\".js-hidden-text\"),\n}\n\nasync function getAllFavoriteModels(exercises) {\n  const exModels = await Promise.all(\n    exercises.map(async (element) => {\n      return await api.exerciseInfo(element);\n    })\n  );\n\n  return exModels;\n}\n  \n\n  async function createExerciseCards(exercises) {\n  \n    return getAllFavoriteModels(exercises).then(\n        value => {\n            return value.map(({_id, bodyPart, burnedCalories, target, name, time}) => \n                `<li data-id=\"${_id}\" class=\"exercise-card\">\n                  <div class=\"exercise-header\">\n                    <div class=\"exercise-trash\">\n                      <p class=\"workout\">WORKOUT</p>\n                    <button class=\"trash-btn\" type=\"submit\">\n                    <svg class=\"trash-svg\"  width=\"16\" height=\"16\">\n                          <use id = \"dell\" href=\"${icons}#icon-trash-fav\"></use>\n                          </svg> \n                    </button>              \n                    </div>    \n                      <button id = \"open\" class=\"exercise-btn\" type=\"button\">Start\n                        <svg id = \"arrow\" class=\"arrow-svg\" width=\"16\" height=\"16\">\n                          <use href=\"${icons}#icon-arrow\"></use>\n                        </svg>\n                      </button>\n                  </div>  \n                    <div class = \"exercise-tittle\"> \n                    <div class= \"man-svg-thumb\">\n                      <svg width=\"24\" height=\"24\">\n                        <use href=\"${icons}#icon-icon-2\"></use>\n                      </svg>\n                      </div>\n                      <p class=\"favorite-exercise-name\">${capitalize(name)}</p>\n                    </div> \n                    <div class=\"exercise-information\">\n                      <p class=\"exercise-category\">Burned calories: <span>${burnedCalories}/${time}min</span></p>\n                      <p class=\"exercise-category\">Body part: <span>${capitalize(bodyPart)}</span></p>\n                      <p class=\"exercise-category\">Target: <span>${capitalize(target)}</span></p>\n                    </div>            \n                </li>`\n              ).join(\"\")\n        },)\n        \n   \n}\n\nfunction renderExercises(exercises) {\n     createExerciseCards(exercises).then(\n    cards => {\n        Refs.galleryList.innerHTML=\"\"\n        Refs.galleryList.insertAdjacentHTML('beforeend', cards);\n      \n        Refs.defaultText.style.display = 'none';\n        Refs.galleryList.style.display = 'flex';\n          \n        const cardsEl = document.querySelectorAll(\".exercise-card\"); \n        for (let card of cardsEl) {\n          card.addEventListener('click', handleCardClick);  \n        }\n      \n        if (exercises.length === 0) {\n          Refs.defaultText.style.display = 'flex';\n          Refs.galleryList.style.display = 'none';    \n       } \n    },\n    error => {\n      console.log(error); // \"Error! Error passed to reject function\"\n    }\n  );\n\n \n}\n\nwindow.addEventListener(\"resize\", renderCards)\nfunction renderCards() {\n  let exercises = getFavorites();\n  \n  renderExercises(exercises)\n\n}\n\nrenderCards(); \n\nconst cards = document.querySelectorAll(\".exercise-card\"); \n\nfor (let card of cards) {\n  card.addEventListener('click', handleCardClick);\n}\n\nasync function handleCardClick(event) {\n  switch (event.target.id) {\n    case \"dell\":\n      return removeCard(event);\n    case \"open\":\n      return openCard(event);\n    case \"arrow\":\n      return openCard(event);\n  }\n}\n\nfunction removeCard(event) {\n  const id = event.currentTarget.dataset.id; \n  removeFromFavorites(id);\n  renderCards();  \n}\n\nasync function openCard(event) {\n  const id = event.currentTarget.dataset.id; \n    \n}\n\nfunction capitalize(s) {\n        return s[0].toUpperCase() + s.slice(1);\n    \n}\n\n"],"names":["renderQuote","currentDay","storedQuoteState","storedQuoteDay","quoteData","quoteText","quoteAuthor","Refs","getAllFavoriteModels","exercises","element","api","createExerciseCards","value","_id","bodyPart","burnedCalories","target","name","time","icons","capitalize","renderExercises","cards","cardsEl","card","handleCardClick","error","renderCards","getFavorites","event","removeCard","openCard","id","removeFromFavorites","s"],"mappings":"sGASA,eAAeA,GAAc,CAEzB,MAAMC,EADc,IAAI,OACO,UAE/B,IAAIC,EAAmB,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,GAAK,GAExE,MAAMC,EAAiBD,EAAiB,KAAO,EAE/C,GAAID,IAAeE,EAAgB,CAC/B,MAAMC,EAAY,MAAM,eAExBA,EAAU,IAAMH,EAChB,aAAa,QAAQ,YAAa,KAAK,UAAUG,CAAS,CAAC,EAC3DF,EAAmBE,CACtB,CAED,MAAMC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAc,SAAS,cAAc,eAAe,EAC1DD,EAAU,YAAcH,EAAiB,MACzCI,EAAY,YAAcJ,EAAiB,MAE/C,CAIAF,IAGA,MAAMO,EAAO,CACX,YAAa,SAAS,cAAc,eAAe,EACnD,YAAa,SAAS,cAAc,iBAAiB,CACvD,EAEA,eAAeC,EAAqBC,EAAW,CAO7C,OANiB,MAAM,QAAQ,IAC7BA,EAAU,IAAI,MAAOC,GACZ,MAAMC,EAAI,aAAaD,CAAO,CACtC,CACL,CAGA,CAGE,eAAeE,EAAoBH,EAAW,CAE5C,OAAOD,EAAqBC,CAAS,EAAE,KACnCI,GACWA,EAAM,IAAI,CAAC,CAAC,IAAAC,EAAK,SAAAC,EAAU,eAAAC,EAAgB,OAAAC,EAAQ,KAAAC,EAAM,KAAAC,CAAI,IAChE,gBAAgBL,CAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAMgBM,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAMjBA,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAOPA,CAAK;AAAA;AAAA;AAAA,0DAGgBC,EAAWH,CAAI,CAAC;AAAA;AAAA;AAAA,4EAGEF,CAAc,IAAIG,CAAI;AAAA,sEAC5BE,EAAWN,CAAQ,CAAC;AAAA,mEACvBM,EAAWJ,CAAM,CAAC;AAAA;AAAA,sBAGrF,EAAgB,KAAK,EAAE,CACZ,CAGX,CAEA,SAASK,EAAgBb,EAAW,CAC/BG,EAAoBH,CAAS,EAAE,KAChCc,GAAS,CACLhB,EAAK,YAAY,UAAU,GAC3BA,EAAK,YAAY,mBAAmB,YAAagB,CAAK,EAEtDhB,EAAK,YAAY,MAAM,QAAU,OACjCA,EAAK,YAAY,MAAM,QAAU,OAEjC,MAAMiB,EAAU,SAAS,iBAAiB,gBAAgB,EAC1D,QAASC,KAAQD,EACfC,EAAK,iBAAiB,QAASC,CAAe,EAG5CjB,EAAU,SAAW,IACvBF,EAAK,YAAY,MAAM,QAAU,OACjCA,EAAK,YAAY,MAAM,QAAU,OAEtC,EACDoB,GAAS,CACP,QAAQ,IAAIA,CAAK,CAClB,CACL,CAGA,CAEA,OAAO,iBAAiB,SAAUC,CAAW,EAC7C,SAASA,GAAc,CACrB,IAAInB,EAAYoB,IAEhBP,EAAgBb,CAAS,CAE3B,CAEAmB,IAEA,MAAML,EAAQ,SAAS,iBAAiB,gBAAgB,EAExD,QAASE,KAAQF,EACfE,EAAK,iBAAiB,QAASC,CAAe,EAGhD,eAAeA,EAAgBI,EAAO,CACpC,OAAQA,EAAM,OAAO,GAAE,CACrB,IAAK,OACH,OAAOC,EAAWD,CAAK,EACzB,IAAK,OACH,OAAOE,EAASF,CAAK,EACvB,IAAK,QACH,OAAOE,EAASF,CAAK,CACxB,CACH,CAEA,SAASC,EAAWD,EAAO,CACzB,MAAMG,EAAKH,EAAM,cAAc,QAAQ,GACvCI,EAAoBD,CAAE,EACtBL,GACF,CAEA,eAAeI,EAASF,EAAO,CAClBA,EAAM,cAAc,QAAQ,EAEzC,CAEA,SAAST,EAAWc,EAAG,CACf,OAAOA,EAAE,CAAC,EAAE,YAAa,EAAGA,EAAE,MAAM,CAAC,CAE7C"}