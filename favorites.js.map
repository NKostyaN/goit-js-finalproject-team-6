{"version":3,"file":"favorites.js","sources":["../src/js/favorite.js"],"sourcesContent":["import icons from '../img/icons/sprites.svg';\nimport { getFavorites, toggleFavorite } from './storage.js';\nimport { api } from './api.js';\nimport * as utils from './utils.js'\n// import axios from 'axios';\n// import { initModalListeners } from './modal';\n\nasync function renderQuote() {\n  const currentDate = new Date();\n  const currentDay = currentDate.getDate();\n\n  let storedQuoteState = JSON.parse(localStorage.getItem('quoteData')) ?? {};\n\n  const storedQuoteDay = storedQuoteState.day ?? 0;\n\n  if (currentDay !== storedQuoteDay) {\n    const quoteData = await serviceQuote();\n\n    quoteData.day = currentDay;\n    localStorage.setItem('quoteData', JSON.stringify(quoteData));\n    storedQuoteState = quoteData;\n  }\n\n  const quoteText = document.querySelector('.quote-text');\n  const quoteAuthor = document.querySelector('.quote-author');\n  quoteText.textContent = storedQuoteState.quote;\n  quoteAuthor.textContent = storedQuoteState.author;\n}\n\nrenderQuote();\n\nconst Refs = {\n  galleryList: document.querySelector('.gallery-list'),\n  defaultText: document.querySelector('.js-hidden-text'),\n};\n\nasync function getAllFavoriteModels(exercises) {\n  const exModels = await Promise.all(\n    exercises.map(async element => {\n      return await api.exerciseInfo(element);\n    })\n  );\n\n  return exModels;\n}\n\nasync function createExerciseCards(exercises) {\n  return getAllFavoriteModels(exercises).then(value => {\n    return value\n      .map(\n        ({ _id, bodyPart, burnedCalories, target, name, time }) =>\n          `<li data-id=\"${_id}\" class=\"exercise-card\">\n                  <div class=\"exercise-header\">\n                    <div class=\"exercise-trash\">\n                      <p class=\"workout\">WORKOUT</p>\n                    <button class=\"trash-btn\" type=\"submit\">\n                    <svg class=\"trash-svg\"  width=\"16\" height=\"16\">\n                          <use id = \"dell\" href=\"${icons}#icon-trash-fav\"></use>\n                          </svg> \n                    </button>              \n                    </div>    \n                      <button id = \"open\" class=\"exercise-btn\" type=\"button\">Start\n                        <svg id = \"arrow\" class=\"arrow-svg\" width=\"16\" height=\"16\">\n                          <use href=\"${icons}#icon-arrow\"></use>\n                        </svg>\n                      </button>\n                  </div>  \n                    <div class = \"exercise-tittle\"> \n                    <div class= \"man-svg-thumb\">\n                      <svg width=\"24\" height=\"24\">\n                        <use href=\"${icons}#icon-icon-2\"></use>\n                      </svg>\n                      </div>\n                      <p class=\"favorite-exercise-name\">${utils.capitalize(\n                        name\n                      )}</p>\n                    </div> \n                    <div class=\"exercise-information\">\n                      <p class=\"exercise-category\">Burned calories: <span>${burnedCalories}/${time}min</span></p>\n                      <p class=\"exercise-category\">Body part: <span>${utils.capitalize(\n                        bodyPart\n                      )}</span></p>\n                      <p class=\"exercise-category\">Target: <span>${utils.capitalize(\n                        target\n                      )}</span></p>\n                    </div>            \n                </li>`\n      )\n      .join('');\n  });\n}\n\nfunction renderExercises(exercises) {\n  createExerciseCards(exercises).then(\n    cards => {\n      Refs.galleryList.innerHTML = '';\n      Refs.galleryList.insertAdjacentHTML('beforeend', cards);\n\n      Refs.defaultText.style.display = 'none';\n      Refs.galleryList.style.display = 'flex';\n\n      const cardsEl = document.querySelectorAll('.exercise-card');\n      for (let card of cardsEl) {\n        card.addEventListener('click', handleCardClick);\n      }\n\n      if (exercises.length === 0) {\n        Refs.defaultText.style.display = 'flex';\n        Refs.galleryList.style.display = 'none';\n      }\n    },\n    error => {\n      console.log(error); // \"Error! Error passed to reject function\"\n    }\n  );\n}\n\nwindow.addEventListener('resize', renderCards);\nfunction renderCards() {\n  let exercises = getFavorites();\n\n  renderExercises(exercises);\n}\n\nrenderCards();\n\nconst cards = document.querySelectorAll('.exercise-card');\n\nfor (let card of cards) {\n  card.addEventListener('click', handleCardClick);\n}\n\nasync function handleCardClick(event) {\n  switch (event.target.id) {\n    case 'dell':\n      return removeCard(event);\n    case 'open':\n      return openCard(event);\n    case 'arrow':\n      return openCard(event);\n  }\n}\n\nfunction removeCard(event) {\n  const id = event.currentTarget.dataset.id;\n  toggleFavorite(id);\n  renderCards();\n}\n\nasync function openCard(event) {\n  const id = event.currentTarget.dataset.id;\n}\n\nfunction capitalize(s) {\n  return s[0].toUpperCase() + s.slice(1);\n}\n"],"names":["renderQuote","currentDay","storedQuoteState","storedQuoteDay","quoteData","quoteText","quoteAuthor","Refs","getAllFavoriteModels","exercises","element","api","createExerciseCards","value","_id","bodyPart","burnedCalories","target","name","time","icons","utils.capitalize","renderExercises","cards","cardsEl","card","handleCardClick","error","renderCards","getFavorites","event","removeCard","openCard","id","toggleFavorite"],"mappings":"+GAOA,eAAeA,GAAc,CAE3B,MAAMC,EADc,IAAI,OACO,UAE/B,IAAIC,EAAmB,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,GAAK,GAExE,MAAMC,EAAiBD,EAAiB,KAAO,EAE/C,GAAID,IAAeE,EAAgB,CACjC,MAAMC,EAAY,MAAM,eAExBA,EAAU,IAAMH,EAChB,aAAa,QAAQ,YAAa,KAAK,UAAUG,CAAS,CAAC,EAC3DF,EAAmBE,CACpB,CAED,MAAMC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAc,SAAS,cAAc,eAAe,EAC1DD,EAAU,YAAcH,EAAiB,MACzCI,EAAY,YAAcJ,EAAiB,MAC7C,CAEAF,IAEA,MAAMO,EAAO,CACX,YAAa,SAAS,cAAc,eAAe,EACnD,YAAa,SAAS,cAAc,iBAAiB,CACvD,EAEA,eAAeC,EAAqBC,EAAW,CAO7C,OANiB,MAAM,QAAQ,IAC7BA,EAAU,IAAI,MAAMC,GACX,MAAMC,EAAI,aAAaD,CAAO,CACtC,CACL,CAGA,CAEA,eAAeE,EAAoBH,EAAW,CAC5C,OAAOD,EAAqBC,CAAS,EAAE,KAAKI,GACnCA,EACJ,IACC,CAAC,CAAE,IAAAC,EAAK,SAAAC,EAAU,eAAAC,EAAgB,OAAAC,EAAQ,KAAAC,EAAM,KAAAC,CAAM,IACpD,gBAAgBL,CAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAMsBM,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAMjBA,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAOPA,CAAK;AAAA;AAAA;AAAA,0DAGgBC,EAClCH,CACxB,CAAuB;AAAA;AAAA;AAAA,4EAGqDF,CAAc,IAAIG,CAAI;AAAA,sEAC5BE,EAC9CN,CACxB,CAAuB;AAAA,mEAC4CM,EAC3CJ,CACxB,CAAuB;AAAA;AAAA,sBAGhB,EACA,KAAK,EAAE,CACX,CACH,CAEA,SAASK,EAAgBb,EAAW,CAClCG,EAAoBH,CAAS,EAAE,KAC7Bc,GAAS,CACPhB,EAAK,YAAY,UAAY,GAC7BA,EAAK,YAAY,mBAAmB,YAAagB,CAAK,EAEtDhB,EAAK,YAAY,MAAM,QAAU,OACjCA,EAAK,YAAY,MAAM,QAAU,OAEjC,MAAMiB,EAAU,SAAS,iBAAiB,gBAAgB,EAC1D,QAASC,KAAQD,EACfC,EAAK,iBAAiB,QAASC,CAAe,EAG5CjB,EAAU,SAAW,IACvBF,EAAK,YAAY,MAAM,QAAU,OACjCA,EAAK,YAAY,MAAM,QAAU,OAEpC,EACDoB,GAAS,CACP,QAAQ,IAAIA,CAAK,CAClB,CACL,CACA,CAEA,OAAO,iBAAiB,SAAUC,CAAW,EAC7C,SAASA,GAAc,CACrB,IAAInB,EAAYoB,IAEhBP,EAAgBb,CAAS,CAC3B,CAEAmB,IAEA,MAAML,EAAQ,SAAS,iBAAiB,gBAAgB,EAExD,QAASE,KAAQF,EACfE,EAAK,iBAAiB,QAASC,CAAe,EAGhD,eAAeA,EAAgBI,EAAO,CACpC,OAAQA,EAAM,OAAO,GAAE,CACrB,IAAK,OACH,OAAOC,EAAWD,CAAK,EACzB,IAAK,OACH,OAAOE,EAASF,CAAK,EACvB,IAAK,QACH,OAAOE,EAASF,CAAK,CACxB,CACH,CAEA,SAASC,EAAWD,EAAO,CACzB,MAAMG,EAAKH,EAAM,cAAc,QAAQ,GACvCI,EAAeD,CAAE,EACjBL,GACF,CAEA,eAAeI,EAASF,EAAO,CAClBA,EAAM,cAAc,QAAQ,EACzC"}