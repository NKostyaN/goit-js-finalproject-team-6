{"version":3,"file":"favorites.js","sources":["../src/js/favorite.js"],"sourcesContent":["import icons from '../img/icons/sprites.svg';\nimport { getFavorites, toggleFavorite } from './storage.js';\nimport { api } from './api.js';\nimport * as utils from './utils.js';\nimport { initModalListeners } from './modal.js';\n\nasync function renderQuote() {\n  function serviceQuote() {\n    const BASE_URL = 'https://your-energy.b.goit.study/api';\n    const END_POINT = 'quote';\n\n    return fetch(`${BASE_URL}/${END_POINT}`).then(resp => {\n      if (!resp.ok) {\n        throw new Error(`Fetch error with ${resp.status}: ${resp.statusText}`);\n      }\n      return resp.json();\n    });\n  }\n  const currentDate = new Date();\n  const currentDay = currentDate.getDate();\n\n  let storedQuoteState = JSON.parse(localStorage.getItem('quoteData')) ?? {};\n\n  const storedQuoteDay = storedQuoteState.day ?? 0;\n\n  if (currentDay !== storedQuoteDay) {\n    const quoteData = await serviceQuote();\n\n    quoteData.day = currentDay;\n    localStorage.setItem('quoteData', JSON.stringify(quoteData));\n    storedQuoteState = quoteData;\n  }\n\n  const quoteText = document.querySelector('.quote-text');\n  const quoteAuthor = document.querySelector('.quote-author');\n  quoteText.textContent = storedQuoteState.quote;\n  quoteAuthor.textContent = storedQuoteState.author;\n}\n\nrenderQuote();\n\nconst Refs = {\n  galleryContainer: document.querySelector('.favorites-gallery'),\n  galleryList: document.querySelector('.gallery-list'),\n  defaultText: document.querySelector('.js-hidden-text'),\n};\n\nRefs.defaultText.style.display = 'none';\nRefs.galleryContainer.style.display = 'none';\n\nasync function getAllFavoriteModels(exercises) {\n  const exModels = await Promise.all(\n    exercises.map(async element => {\n      return await api.exerciseInfo(element);\n    })\n  );\n\n  return exModels;\n}\n\nasync function createExerciseCards(exercises) {\n  return getAllFavoriteModels(exercises).then(value => {\n    return value\n      .map(\n        ({ _id, bodyPart, burnedCalories, target, name, time }) =>\n          `<li data-id=\"${_id}\" class=\"exercise-card\">\n              <div class=\"exercise-header\">\n                <div class=\"exercise-trash\">\n                  <p class=\"workout\">WORKOUT</p>\n                <button id=\"dell\" class=\"trash-btn\" type=\"submit\">\n                <svg class=\"trash-svg\"  width=\"16\" height=\"16\">\n                  <use href=\"${icons}#icon-trash-fav\"></use>\n                </svg> \n                </button>              \n                </div>    \n                  <button class=\"exercise-btn\" type=\"button\" data-modal-open value=\"${_id}\">\n                  Start\n                    <svg class=\"exercise-arrow\" width=\"13\" height=\"13\">\n                      <use href=\"${icons}#icon-start-arrow\"></use>\n                    </svg>\n                  </button>\n              </div>  \n                    <div class = \"exercise-tittle\"> \n            <h3 class=\"exercise-name\">\n              <svg class=\"exercise-name-icon\" width=\"24\" height=\"24\">\n                <use href=\"${icons}#icon-icon-2\"></use>\n              </svg>${utils.capitalize(name)}</h3>\n                    </div> \n            <div class=\"exercise-info\">\n              <p class=\"truncate-text\"><strong class=\"exercise-info-title\">Burned calories:</strong> ${burnedCalories}/${time}min</p>\n              <p class=\"truncate-text\"><strong class=\"exercise-info-title\">Body part:</strong> ${utils.capitalize(\n                bodyPart\n              )}</p>\n              <p class=\"truncate-text\"><strong class=\"exercise-info-title\">Target:</strong> ${utils.capitalize(\n                target\n              )}</p>\n            </div>\n          </li>`\n      )\n      .join('');\n  });\n}\n\nfunction renderExercises(exercises) {\n  createExerciseCards(exercises).then(\n    cards => {\n      Refs.galleryList.innerHTML = '';\n      Refs.galleryList.insertAdjacentHTML('beforeend', cards);\n\n      Refs.defaultText.style.display = 'none';\n      Refs.galleryContainer.style.display = 'block';\n\n      const cardsEl = document.querySelectorAll('.exercise-card');\n      for (let card of cardsEl) {\n        card.querySelector('#dell').addEventListener('click', removeCard);\n      }\n\n      if (exercises.length === 0) {\n        Refs.defaultText.style.display = 'flex';\n        Refs.galleryContainer.style.display = 'none';\n      }\n\n      initModalListeners();\n    },\n    error => {\n      console.log(error); // \"Error! Error passed to reject function\"\n    }\n  );\n}\n\nwindow.addEventListener('resize', renderCards);\nasync function renderCards() {\n  let exercises = getFavorites();\n  await renderExercises(exercises);\n}\n\nrenderCards();\n\nfunction removeCard(event) {\n  const id = document.querySelector('.exercise-card').dataset.id;\n  toggleFavorite(id);\n  renderCards();\n}\n"],"names":["renderQuote","serviceQuote","resp","currentDay","storedQuoteState","storedQuoteDay","quoteData","quoteText","quoteAuthor","Refs","getAllFavoriteModels","exercises","element","api","createExerciseCards","value","_id","bodyPart","burnedCalories","target","name","time","icons","utils.capitalize","renderExercises","cards","cardsEl","card","removeCard","initModalListeners","error","renderCards","getFavorites","event","id","toggleFavorite"],"mappings":"iHAMA,eAAeA,GAAc,CAC3B,SAASC,GAAe,CAItB,OAAO,MAAM,4CAA0B,EAAE,KAAKC,GAAQ,CACpD,GAAI,CAACA,EAAK,GACR,MAAM,IAAI,MAAM,oBAAoBA,EAAK,MAAM,KAAKA,EAAK,UAAU,EAAE,EAEvE,OAAOA,EAAK,MAClB,CAAK,CACF,CAED,MAAMC,EADc,IAAI,OACO,UAE/B,IAAIC,EAAmB,KAAK,MAAM,aAAa,QAAQ,WAAW,CAAC,GAAK,GAExE,MAAMC,EAAiBD,EAAiB,KAAO,EAE/C,GAAID,IAAeE,EAAgB,CACjC,MAAMC,EAAY,MAAML,IAExBK,EAAU,IAAMH,EAChB,aAAa,QAAQ,YAAa,KAAK,UAAUG,CAAS,CAAC,EAC3DF,EAAmBE,CACpB,CAED,MAAMC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAc,SAAS,cAAc,eAAe,EAC1DD,EAAU,YAAcH,EAAiB,MACzCI,EAAY,YAAcJ,EAAiB,MAC7C,CAEAJ,IAEA,MAAMS,EAAO,CACX,iBAAkB,SAAS,cAAc,oBAAoB,EAC7D,YAAa,SAAS,cAAc,eAAe,EACnD,YAAa,SAAS,cAAc,iBAAiB,CACvD,EAEAA,EAAK,YAAY,MAAM,QAAU,OACjCA,EAAK,iBAAiB,MAAM,QAAU,OAEtC,eAAeC,EAAqBC,EAAW,CAO7C,OANiB,MAAM,QAAQ,IAC7BA,EAAU,IAAI,MAAMC,GACX,MAAMC,EAAI,aAAaD,CAAO,CACtC,CACL,CAGA,CAEA,eAAeE,EAAoBH,EAAW,CAC5C,OAAOD,EAAqBC,CAAS,EAAE,KAAKI,GACnCA,EACJ,IACC,CAAC,CAAE,IAAAC,EAAK,SAAAC,EAAU,eAAAC,EAAgB,OAAAC,EAAQ,KAAAC,EAAM,KAAAC,CAAM,IACpD,gBAAgBL,CAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAMEM,CAAK;AAAA;AAAA;AAAA;AAAA,sFAIkDN,CAAG;AAAA;AAAA;AAAA,mCAGtDM,CAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAOXA,CAAK;AAAA,sBACZC,EAAiBH,CAAI,CAAC;AAAA;AAAA;AAAA,uGAG2DF,CAAc,IAAIG,CAAI;AAAA,iGAC5BE,EACjFN,CAChB,CAAe;AAAA,8FAC+EM,EAC9EJ,CAChB,CAAe;AAAA;AAAA,gBAGR,EACA,KAAK,EAAE,CACX,CACH,CAEA,SAASK,EAAgBb,EAAW,CAClCG,EAAoBH,CAAS,EAAE,KAC7Bc,GAAS,CACPhB,EAAK,YAAY,UAAY,GAC7BA,EAAK,YAAY,mBAAmB,YAAagB,CAAK,EAEtDhB,EAAK,YAAY,MAAM,QAAU,OACjCA,EAAK,iBAAiB,MAAM,QAAU,QAEtC,MAAMiB,EAAU,SAAS,iBAAiB,gBAAgB,EAC1D,QAASC,KAAQD,EACfC,EAAK,cAAc,OAAO,EAAE,iBAAiB,QAASC,CAAU,EAG9DjB,EAAU,SAAW,IACvBF,EAAK,YAAY,MAAM,QAAU,OACjCA,EAAK,iBAAiB,MAAM,QAAU,QAGxCoB,GACD,EACDC,GAAS,CACP,QAAQ,IAAIA,CAAK,CAClB,CACL,CACA,CAEA,OAAO,iBAAiB,SAAUC,CAAW,EAC7C,eAAeA,GAAc,CAC3B,IAAIpB,EAAYqB,IAChB,MAAMR,EAAgBb,CAAS,CACjC,CAEAoB,IAEA,SAASH,EAAWK,EAAO,CACzB,MAAMC,EAAK,SAAS,cAAc,gBAAgB,EAAE,QAAQ,GAC5DC,EAAeD,CAAE,EACjBH,GACF"}